- course_videos = current_course.videos
- has_course_videos = course_videos.exists?
- course_video_count = has_course_videos ? course_videos.count : 0
- can_analyze_videos = can?(:analyze_videos, current_course)
- is_course_gamified = current_course.gamified?
- no_group_managers = service.no_group_managers?

table.table.table-striped.table-hover
  thead
    tr
      th.text-center
        = t('common.serial_number')
      th
        = CourseUser.human_attribute_name(:name)
      - unless no_group_managers
        th
          = t('.tutor')
      - if is_course_gamified
        th.text-center
          = Course::Level.model_name.human
        th.text-center
          = t('.experience_points')
      - if has_course_videos && can_analyze_videos
        th.text-center
          = t('.video_watched', total: course_video_count)
        th.text-center
          = t('.percent_watched')

  tbody
    - students.each.with_index(1) do |student, index|
      = content_tag_for(:tr, student)
        td.text-center
          = index
        td
          = link_to_user(student)
        - unless no_group_managers
          td
            = service.group_managers_of(student).map(&:name).join(', ')
        - if is_course_gamified
          td.text-center
            = student.level_number
          td.text-center
            = link_to student.experience_points,
                      course_user_experience_points_records_path(current_course, student)
        - if has_course_videos && can_analyze_videos
          td.text-center
            = link_to student.video_submission_count,
                      course_user_video_submissions_path(current_course, student)
          td.text-center
            = display_progress_bar(student.video_percent_watched) do
              = t('.progress', progress: student.video_percent_watched)
